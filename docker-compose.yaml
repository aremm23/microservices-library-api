services:
  core-service-postgres:
    image: postgres:17.0-alpine
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: core_service_db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  library-service-postgres:
    image: postgres:17.0-alpine
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: library_service_db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  keycloak-auth-service-postgres:
    image: postgres:16.4
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: keycloak_db
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.0.2-alpine
    restart: always
    ports:
      - "5672:5672"
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.1
    restart: always
    command:
      - "start-dev"
    ports:
      - "9082:9082"
    environment:
      KC_HTTP_PORT: 9080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-auth-service-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HEALTH_ENABLED: "true"
    healthcheck:
      test:
        [ "CMD-SHELL", "{ exec 3<>/dev/tcp/localhost/9080 && echo -e \"GET /health/ready HTTP/1.1\nhost: localhost:9080\n\" >&3 && timeout --preserve-status 1 cat <&3 | grep -m 1 -q 'status.*UP'; }" ]
      interval: 10s
      timeout: 5s
      start_period: 60s
      retries: 5
    depends_on:
      - keycloak-auth-service-postgres

  eureka-service:
    image: eureka-service:latest
    build:
      context: eureka-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - "8761:8761"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8761/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5

  config-service:
    image: config-service:latest
    build:
      context: config-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - "8888:8888"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8888/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - eureka-service

  gateway-service:
    image: gateway-service:latest
    build:
      context: api-gateway-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - eureka-service
      - config-service

  core-service:
    image: core-service:latest
    build:
      context: core-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8082:8082"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8082/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - core-service-postgres
      - rabbitmq
      - eureka-service
      - config-service

  keycloak-auth-service:
    image: keycloak-auth-service:latest
    build:
      context: keycloak-auth-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8081:8081"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8081/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - keycloak-auth-service-postgres
      - keycloak
      - eureka-service
      - config-service

  library-service:
    image: library-service:latest
    build:
      context: library-service
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8083:8083"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8083/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5
    depends_on:
      - library-service-postgres
      - eureka-service
      - rabbitmq
      - config-service